version: '3.8'

services:
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    x-tinkr:
      load_balancer: 
        tenancy: shared
        type: webserver
        healthcheck:
          path: /
          success_code: 200
          timeout: 10
          healthy-threshold: 3
          unhealthy-threshold: 5
          port: 8000
          interval: 120
      environment:
        - POSTGRES_HOST=<hostname:db>
        - POSTGRES_USER=your_db_user
        - POSTGRES_PASSWORD=your_db_password

  db:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: always
    environment:
      POSTGRES_DB: your_db_name
      POSTGRES_USER: your_db_user
      POSTGRES_PASSWORD: your_db_password
    expose:
      - 5432
    x-tinkr:
      load_balancer:
        type: network
        tenancy: dedicated

  redis:
    image: redis
    restart: always
    ports:
      - "6379:6379"
    x-tinkr:
      load_balancer:
        type: network
        tenancy: dedicated

volumes:
  postgres_data:
